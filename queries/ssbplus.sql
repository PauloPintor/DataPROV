#5SELECT s_name, SUM(quantity) as quantity FROM flat_lineorder l WHERE od_year IN (1999, 1998, 1997, 1996) AND EXISTS (SELECT r.s_suppkey FROM flat_returns r WHERE r.c_region = 'AMERICA' AND rd_year IN (1999, 1998, 1997, 1996) AND l.s_suppkey = r.s_suppkey) GROUP BY s_name ORDER BY quantity DESC LIMIT 20;#6.1WITH returns_found AS (SELECT p_partkey as partkey, count(1) as count_returns FROM flat_returns r WHERE p_mfgr = 'MFGR#3' AND s_region = 'ASIA' AND c_region = 'AMERICA' GROUP BY p_partkey) SELECT p_name, p_category, count(1) as count FROM flat_lineorder l WHERE p_mfgr = 'MFGR#3' AND s_region = 'ASIA' AND c_region = 'AMERICA' AND EXISTS (SELECT partkey FROM returns_found rf WHERE l.p_partkey = rf.partkey AND count_returns > 1) GROUP BY p_name, p_category HAVING AVG(extendedprice) > 1000;#6.2WITH returns_found AS (SELECT p_partkey as partkey, count(1) as count_returns FROM flat_returns r GROUP BY p_partkey) SELECT p_name, p_category, count(1) as count FROM flat_lineorder l WHERE EXISTS (SELECT partkey FROM returns_found rf WHERE l.p_partkey = rf.partkey AND count_returns > 1) GROUP BY p_name, p_category HAVING AVG(extendedprice) > 1000 ORDER BY count DESC LIMIT 10;#7WITH ranks AS (SELECT part_name, c_mktsegment, revenue, RANK() OVER (PARTITION BY c_mktsegment ORDER BY revenue DESC) as rank FROM (SELECT p_name as part_name, c_mktsegment, SUM(revenue) as revenue FROM flat_lineorder GROUP BY p_name, c_mktsegment) as part_mkt_rev) SELECT * FROM ranks WHERE rank <= 5;#8.1 WITH sentByCountry AS (              SELECT                country,                AVG(sentiment) as sent              FROM social_part_popularity_flat              GROUP BY country            )            SELECT *            FROM (              SELECT *              FROM sentByCountry              ORDER BY sent DESC LIMIT 2            )            UNION ALL (              SELECT *              FROM sentByCountry              ORDER BY sent ASC LIMIT 2#8.2WITH sentByCountry AS (              SELECT                country,                AVG(sentiment) as sent              FROM social_part_popularity              GROUP BY country            )            SELECT *            FROM (              SELECT *              FROM sentByCountry              ORDER BY sent DESC LIMIT 2            )            UNION ALL (              SELECT *              FROM sentByCountry              ORDER BY sent ASC LIMIT 2            );#9.1SELECT  CASE    WHEN t.hour >= 0 AND t.hour <= 6 THEN 'Dawn'    WHEN t.hour > 6 AND t.hour <= 12 THEN 'Morning'    WHEN t.hour > 12 AND t.hour <= 18 THEN 'Afternoon'    WHEN t.hour > 18 AND t.hour <= 23 THEN 'Night'    else NULL END AS dayPeriod,  p.category,  COUNT(sentiment) as countFROM social_part_popularity AS sppJOIN hive.$4.part AS p ON spp.partkey = p.partkeyJOIN hive.$4.time_dim AS t ON spp.timekey = t.timekeyWHERE (country = 'Portugal' OR country = 'Spain') AND gender ='Female'GROUP BY t.hour, p.category;#9.2SELECT CASE WHEN hour >= 0 AND hour <= 6 THEN 'Dawn' WHEN hour > 6 AND hour <= 12 THEN 'Morning' WHEN hour > 12 AND hour <= 18 THEN 'Afternoon' WHEN hour > 18 AND hour <= 23 THEN 'Night' else NULL END AS dayPeriod, partcategory, COUNT(sentiment) as count FROM social_part_popularity_flat WHERE (country = 'Portugal' OR country = 'Spain') AND gender ='Female' GROUP BY hour, partcategory;#10.1SELECT          partcategory,          gender,          AVG(sentiment) sent        FROM social_part_popularity_flat        GROUP BY partcategory, gender        HAVING AVG(sentiment) > (                        SELECT AVG(sentiment)                        FROM social_part_popularity_flat                      );#10.2SELECT p.category, gender, AVG(sentiment) sent FROM social_part_popularity AS spp JOIN hive.$4.part AS p ON spp.partkey = p.partkey GROUP BY p.category, gender HAVING AVG(sentiment) > ( SELECT AVG(sentiment) FROMsocial_part_popularity );